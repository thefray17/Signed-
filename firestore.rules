
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function signedIn() { return request.auth != null; }
    function isRoot() { return signedIn() && request.auth.token.isRoot == true; }
    function isAdmin() { return signedIn() && (request.auth.token.role == 'admin' || isRoot()); }
    function isCoadmin() { return signedIn() && request.auth.token.role == 'coadmin'; }
    function isElevated() { return isAdmin() || isCoadmin(); }

    // ---- users ----
    match /users/{uid} {
      allow read: if signedIn() && (request.auth.uid == uid || isElevated());
      allow create: if signedIn() && request.auth.uid == uid;
      // user cannot change their own role/status
      allow update: if signedIn()
                    && request.auth.uid == uid
                    && request.resource.data.role == resource.data.role
                    && request.resource.data.status == resource.data.status;
      allow update: if isElevated();
      allow delete: if false;
    }

    // ---- offices ----
    match /offices/{officeId} {
      allow get, list: if signedIn();
      allow create, update, delete: if isElevated();
    }

    // ---- documents ----
    match /documents/{docId} {
      allow read: if signedIn();
      // Users can create documents
      allow create: if signedIn();
      // Only allow updating specific fields
      allow update: if signedIn(); // This needs to be more granular later
      allow delete: if false;
    }
    
    // ---- auditLogs ----
    match /auditLogs/{logId} {
        allow read: if isElevated();
        allow list: if isElevated();
        allow create, update, delete: if false; // Can only be written by backend functions
    }

    // Deny everything else by default
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
